import   "29ca0423ff612f10d49bd8d43628ab25:./template.js";
function $29ca0423ff612f10d49bd8d43628ab25$export$f47f503e54e2c1f7(result) {
    let templateCache = $29ca0423ff612f10d49bd8d43628ab25$export$f7de09ff312bc1e0.get(result.type);
    if (templateCache === undefined) {
        templateCache = {
            stringsArray: new WeakMap(),
            keyString: new Map()
        };
        $29ca0423ff612f10d49bd8d43628ab25$export$f7de09ff312bc1e0.set(result.type, templateCache);
    }
    let template = templateCache.stringsArray.get(result.strings);
    if (template !== undefined) return template;
    // If the TemplateStringsArray is new, generate a key from the strings
    // This key is shared between all templates with identical content
    const key = result.strings.join($29ca0423ff612f10d49bd8d43628ab25$import$c41f5f1517cd061$a33f808a19e65baa);
    // Check if we already have a Template for this key
    template = templateCache.keyString.get(key);
    if (template === undefined) {
        // If we have not seen this key before, create a new Template
        template = new $29ca0423ff612f10d49bd8d43628ab25$import$c41f5f1517cd061$93af88fe68eea917(result, result.getTemplateElement());
        // Cache the Template for this key
        templateCache.keyString.set(key, template);
    }
    // Cache all future queries for this TemplateStringsArray
    templateCache.stringsArray.set(result.strings, template);
    return template;
}
const $29ca0423ff612f10d49bd8d43628ab25$export$f7de09ff312bc1e0 = new Map();
