var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _app = require("./App");
var _appDefault = parcelHelpers.interopDefault(_app);
var _auth = require("./Auth");
var _authDefault = parcelHelpers.interopDefault(_auth);
var _toast = require("./Toast");
var _toastDefault = parcelHelpers.interopDefault(_toast);
class UserAPI {
    async updateUser(userId, userData, dataType = 'form') {
        // validate
        if (!userId || !userData) return;
        let responseHeader;
        // form data
        if (dataType == 'form') // fetch response header normal (form data)
        responseHeader = {
            method: "PUT",
            headers: {
                "Authorization": `Bearer ${localStorage.accessToken}`
            },
            body: userData
        };
        else if (dataType == 'json') responseHeader = {
            method: "PUT",
            headers: {
                "Authorization": `Bearer ${localStorage.accessToken}`,
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        };
        // make fetch request to backend
        const response = await fetch(`${_appDefault.default.apiBase}/user/${userId}`, responseHeader);
        // if response not ok
        if (!response.ok) {
            // console log error
            const err = await response.json();
            if (err) console.log(err);
            // throw error (exit this function)      
            throw new Error('Problem updating user');
        }
        // convert response payload into json - store as data
        const data = await response.json();
        // return data
        return data;
    }
    async getCreatives() {
        // fetch the json data
        const response = await fetch(`${_appDefault.default.apiBase}/creative`, {
            headers: {
                "Authorization": `Bearer ${localStorage.accessToken}`
            }
        });
        // if response not ok
        if (!response.ok) {
            // console log error
            const err = await response.json();
            if (err) console.log(err);
            // throw error (exit this function)      
            throw new Error('Problem getting creatives');
        }
        // convert response payload into json - store as data
        const data = await response.json();
        // return data
        return data;
    }
    async getUser(userId) {
        // validate
        if (!userId) return;
        // fetch the json data
        const response = await fetch(`${_appDefault.default.apiBase}/user/${userId}`, {
            headers: {
                "Authorization": `Bearer ${localStorage.accessToken}`
            }
        });
        // if response not ok
        if (!response.ok) {
            // console log error
            const err = await response.json();
            if (err) console.log(err);
            // throw error (exit this function)      
            throw new Error('Problem getting user');
        }
        // convert response payload into json - store as data
        const data = await response.json();
        // return data
        return data;
    }
    async addFavCreative(creativeId) {
        // validate
        if (!creativeId) return;
        // fetch the json data
        const response = await fetch(`${_appDefault.default.apiBase}/user/addFavCreative`, {
            method: "PUT",
            headers: {
                "Authorization": `Bearer ${localStorage.accessToken}`,
                "Content-Type": 'application/json'
            },
            body: JSON.stringify({
                creativeId: creativeId
            })
        });
        // if response not ok
        if (!response.ok) {
            // console log error
            const err = await response.json();
            if (err) console.log(err);
            // throw error (exit this function)      
            throw new Error('Problem adding creative to favourites');
        }
        // convert response payload into json - store as data
        const data = await response.json();
        // return data 
        return data;
    }
}
exports.default = new UserAPI();
